   }
}
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.matrix<-as.matrix(msg.tdm)
   msg.freq<-rowSums(as.matrix(msg.matrix))
   print(head(names(msg.freq))
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.matrix<-as.matrix(msg.tdm)
   msg.freq<-rowSums(as.matrix(msg.matrix))
   print(names(msg.freq)
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.matrix<-as.matrix(msg.tdm)
   msg.freq<-rowSums(as.matrix(msg.matrix))
   print(head(names(msg.freq)))
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.docs<-dir(pop.path)
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
pop.notpoptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path,p,sep="/"),training.df=notpop.df))
pop.res<-ifelse(pop.poptest > pop.notpoptest,TRUE,FALSE)
summary(pop.res)
)
head(notpop.df[with(notpop.df, order(-occurrence)),], n = 50)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.matrix<-as.matrix(msg.tdm)
   msg.freq<-rowSums(as.matrix(msg.matrix))
  
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.docs<-dir(pop.path)
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
pop.notpoptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path,p,sep="/"),training.df=notpop.df))
pop.res<-ifelse(pop.poptest > pop.notpoptest,TRUE,FALSE)
summary(pop.res)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.docs<-dir(pop.path)
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
pop.notpoptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path,p,sep="/"),training.df=notpop.df))
pop.res<-ifelse(pop.poptest > pop.notpoptest,TRUE,FALSE)
summary(pop.res)
pop.docs<-dir(pop.path)
all.pop<-sapply(pop.docs, function(p) get.msg(paste(pop.path,p,sep="/")))
 
 get.tdm<-function(doc.vec){
    doc.corpus<-Corpus(VectorSource(doc.vec))
    control<-list(removePunctuation=TRUE, removeNumbers=TRUE, minDocFreq=2)
    doc.dtm<-TermDocumentMatrix(doc.corpus,control)
    return(doc.dtm)
 }
 
pop.tdm<-get.tdm(all.pop)
 
pop.matrix <- as.matrix(pop.tdm)
pop.counts<-rowSums(pop.matrix)
 
pop.df<-data.frame(cbind(names(pop.counts),as.numeric(pop.counts)),stringsAsFactors=FALSE)
 
names(pop.df)<-c("term", "frequency")
pop.df$frequency<-as.numeric(pop.df$frequency)
 
pop.occurrence<-sapply(1:nrow(pop.matrix), function(i){
     length(which(pop.matrix[i,]>0))/ncol(pop.matrix)
})
 
pop.density<-pop.df$frequency/sum(pop.df$frequency)
pop.df<-transform(pop.df, density=pop.density,occurrence=pop.occurrence)
pop.df <- subset(pop.df, nchar(term) >= 3)
head(pop.df[with(pop.df, order(-occurrence)),], n = 50)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   print(msg.freq)
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(msg.match)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
 print(head(names(msg.freq)))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(head(msg.match)
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(head(msg.match))
   if(length(msg.match)<1){
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(head(msg.match))
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("This is match more than 1")
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(head(msg.match))
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("This is match more than 1")
      print("prior")
      print(prior)
      print("prod")
      print(prod(match.probs))
      print("length freq")
      print(length(msg.freq))
      print("length match")
      print(length(msg.match))
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
test<-0.5*2.155226e-30*1e-6^(91)
print(test)
test<-0.5*0.000000000000000000000000000002155226e-30*0.000001^91
print(test)
test<-0.5*0.000000000000000000000000000002155226*0.000001^91
print(test)
head(pop.df[with(pop.df, order(-occurrence)),], n = 50)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   print(head(msg.match))
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("This is match more than 1")
      print("prior")
      print(prior)
      print("prod")
      print(match.probs)
      print(prod(match.probs))
      print("length freq")
      print(length(msg.freq))
      print("length match")
      print(length(msg.match))
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      
      print("This is match more than 1")
      print("prod")
      print(prod(match.probs))
      print("length freq")
      print(length(msg.freq))
      print("length match")
      print(length(msg.match))
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      print("finish")
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      
      
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
pop.poptest<-sapply(pop.docs, function(p) classify.email(paste(pop.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(1/prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (1/prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.docs<-dir(poptest.path)
  poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
  poptest.notpoptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path,p,sep="/"),training.df=notpop.df))
  pop.res<-ifelse(poptest.poptest > poptest.notpoptest,TRUE,FALSE)
  summary(pop.res)
print(2.05102e-1121)
print(2.05102e-280)
print(2.05102e-300)
print(2.05102e-320)
print(2.05102e-330)
print(2.05102e-325)
print(2.05102e-323)
print(2.05102e-324)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.docs<-dir(poptest.path)
  poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("sum")
      print(sum(match.probs))
      print(prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.docs<-dir(poptest.path)
  poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("prior")
      print(prior)
      print("sum")
      print(sum(match.probs))
      print("length freq")
      print(length(msg.freq))
      print("length match")
      print(length(msg.match))
      print("base")
      print(prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-2){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-2){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      print("length freq")
      print(length(msg.freq))
      print("length match")
      print(length(msg.match))
      print(prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
classify.email<-function(path, training.df, prior=0.5, c=1e-2){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
  poptest.docs<-dir(poptest.path)
  poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
  poptest.notpoptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path,p,sep="/"),training.df=notpop.df))
  pop.res<-ifelse(poptest.poptest > poptest.notpoptest,TRUE,FALSE)
  summary(pop.res)
classify.email<-function(path, training.df, prior=0.5, c=1e-2){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   
   if(length(msg.match)<1){
     print("this is match less than 1")
      print(prior*c^(length(msg.freq)))
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      return (prior*sum(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
 poptest.docs<-dir(poptest.path)
  poptest.poptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path, p, sep="/"),training.df=pop.df))
  poptest.notpoptest<-sapply(poptest.docs, function(p) classify.email(paste(poptest.path,p,sep="/"),training.df=notpop.df))
  pop.res<-ifelse(poptest.poptest > poptest.notpoptest,TRUE,FALSE)
  summary(pop.res)
notpoptest.docs<-dir(notpoptest.path)
notpoptest.poptest<-sapply(notpoptest.docs, function(p) classify.email(paste(notpoptest.path, p, sep="/"),training.df=pop.df))
notpoptest.notpoptest<-sapply(notpoptest.docs, function(p) classify.email(paste(notpoptest.path,p,sep="/"),training.df=notpop.df))
notpop.res<-ifelse(notpoptest.poptest > notpoptest.notpoptest,TRUE,FALSE)
summary(notpop.res)
quit
save(".RData")
save("./.RData")
quit
q()
