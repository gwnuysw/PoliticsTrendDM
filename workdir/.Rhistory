q()
q()
install.packages('KoNLP')
q90
q()
install.packages('KoNLP')
library('KoNLP')
setwd("~/Documents/PoliticsTrendDM/workdir/")
load(".RData")
pop.counts<-rowSums(pop.matrix)
pop.df<-data.frame(cbind(names(pop.counts),as.numeric(pop.counts)),stringsAsFactors=FALSE)
names(pop.df)<-c("term", "frequency")
pop.df$frequency<-as.numeric(pop.df$frequency)
pop.occurrence<-sapply(1:nrow(pop.matrix), function(i){
     length(which(pop.matrix[i,]>0))/ncol(pop.matrix)
})
pop.density<-pop.df$frequency/sum(pop.df$frequency)
pop.df<-transform(pop.df, density=pop.density,occurrence=pop.occurrence)
head(pop.df[with(pop.df, order(-occurrence)),])
pop.df[with(pop.df, order(-occurrence)),]
print(pop.matrix)
classify.email<-function(path, training.df, prior=0.5, c=1e-6){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.match<-intersect(names(msg.freq),training.df$term)
   if(length(msg.match)<1){
      return (prior*c^(length(msg.freq)))
   }
   else{
      match.probs<-training.df$occurrence[match(msg.match, training.df$term)]
      return (prior*prod(match.probs)*c^(length(msg.freq)-length(msg.match)))
   }
}
testPop.path<-"../poptest"
testPop.docs<-dir(testPop.path)
testPop.poptest<-sapply(testPop.docs, function(p) classify.email(paste(testPop.path,p,sep="/"),training.df=pop.df))
library('tm')
testPop.poptest<-sapply(testPop.docs, function(p) classify.email(paste(testPop.path,p,sep="/"),training.df=pop.df))
testPop.poptest
test.docs<-dir(testPop.path)
all.testpop<-sapply(test.docs, function(p) get.msg(paste(pop.path,p,sep="/")))
testpop.tdm<-get.tdm(all.testpop)
testpop.matrix <- as.matrix(testpop.tdm)
print(testpop.matrix)
test.docs<-dir(testPop.path)
all.test<-sapply(test.docs, function(p) get.msg(paste(testPop.path,p,sep="/")))
 get.tdm<-function(doc.vec){
    doc.corpus<-Corpus(VectorSource(doc.vec))
    control<-list(removePunctuation=TRUE, removeNumbers=TRUE, minDocFreq=2)
    doc.dtm<-TermDocumentMatrix(doc.corpus,control)
    return(doc.dtm)
 }
test.tdm<-get.tdm(all.pop)
test.matrix <- as.matrix(test.tdm)
test.tdm<-get.tdm(all.test)
test.matrix <- as.matrix(test.tdm)
print(test.matrix)
quit()
