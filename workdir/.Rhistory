    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.3, priornotpop=0.7)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.3, priornotpop=0.7)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
classifypop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priorpop*c^(length(msg.freq)))
   }
   else{
      match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
      match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
      molecule<-priorpop*prod(match.popprobs)*(c^(length(msg.freq)-length(match.popprobs)))
      denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
      return (molecule/denominator)
   }
}
classifynotpop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priornotpop*c^(length(msg.freq)))
   }
   else{
     match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
     match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
     molecule<-priornotpop*prod(match.notpopprobs)*(c^(length(msg.freq)-length(match.notpopprobs)))
     denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
     return (molecule/denominator)
   }
}
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.5, priornotpop=0.5)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.5, priornotpop=0.5)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.2, priornotpop=0.8)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.2, priornotpop=0.8)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.3, priornotpop=0.7)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.3, priornotpop=0.7)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
classifypop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priorpop*c^(length(msg.freq)))
   }
   else{
      match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
      match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
      molecule<-priorpop*prod(match.popprobs)*(c^(length(msg.freq)-length(match.popprobs)))
      denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
      return (molecule/denominator)
   }
}
classifynotpop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priornotpop*c^(length(msg.freq)))
   }
   else{
     match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
     match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
     molecule<-priornotpop*prod(match.notpopprobs)*(c^(length(msg.freq)-length(match.notpopprobs)))
     denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
     return (molecule/denominator)
   }
}
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.5, priornotpop=0.5)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.5, priornotpop=0.5)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allarticle
classifypop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priorpop*c^(length(msg.freq)))
   }
   else{
      match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
      match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
      molecule<-priorpop*prod(match.popprobs)
      denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
      return (molecule/denominator)
   }
}
classifynotpop.email<-function(path, trpop.df, trnotpop.df, priorpop=0.5,priornotpop=0.5, c=1e-1){
   msg<-get.msg(path)
   msg.tdm<-get.tdm(msg)
   msg.freq<-rowSums(as.matrix(msg.tdm))
   msg.popmatch<-intersect(names(msg.freq),trpop.df$term)
   msg.notpopmatch<-intersect(names(msg.freq),trnotpop.df$term)
   if(length(msg.popmatch)<1 | (length(msg.notpopmatch)<1)){
     print(msg.freq)
     return (priornotpop*c^(length(msg.freq)))
   }
   else{
     match.popprobs<-trpop.df$occurrence[match(msg.popmatch, trpop.df$term)]
     match.notpopprobs<-trnotpop.df$occurrence[match(msg.notpopmatch, trnotpop.df$term)]
     molecule<-priornotpop*prod(match.notpopprobs)
     denominator<-priorpop*prod(match.popprobs)+priornotpop*prod(match.notpopprobs)
     return (molecule/denominator)
   }
}
pop.classifier <-function(path){
  pr.pop<-classifypop.email(path,pop.df,notpop.df, priorpop=0.3, priornotpop=0.7)
  pr.notpop<-classifynotpop.email(path, pop.df, notpop.df, priorpop=0.3, priornotpop=0.7)
  return(c(pr.pop, pr.notpop, ifelse(pr.pop > pr.notpop, 1, 0)))
}
notpoptest.docs <- dir(notpoptest.path)
poptest.docs <- dir(poptest.path)
notpoptest.class <- suppressWarnings(lapply(notpoptest.docs,
  function(p)
  {
   pop.classifier(file.path(notpoptest.path, p))
  }))
poptest.class <- suppressWarnings(lapply(poptest.docs,
  function(p)
  {
    pop.classifier(file.path(poptest.path, p))
  }))
notpoptest.matrix <- do.call(rbind, notpoptest.class)
notpoptest.final <- cbind(notpoptest.matrix, "notpop")
poptest.matrix <- do.call(rbind, poptest.class)
poptest.final <- cbind(poptest.matrix, "pop")
class.matrix <- rbind(notpoptest.final, poptest.final)
class.df <- data.frame(class.matrix, stringsAsFactors = FALSE)
names(class.df) <- c("Pr.notpop" ,"Pr.pop", "Class", "Type")
class.df$Pr.pop <- as.numeric(class.df$Pr.pop)
class.df$Pr.notpop <- as.numeric(class.df$Pr.notpop)
class.df$Class <- as.logical(as.numeric(class.df$Class))
class.df$Type <- as.factor(class.df$Type)
class.plot <- ggplot(class.df, aes(x = log(Pr.pop), log(Pr.notpop))) +
    geom_point(aes(shape = Type, alpha = 0.5)) +
    geom_abline(intercept = 0, slope = 1) +
    scale_shape_manual(values = c("pop" = 2,
                                  "notpop" = 3),
                       name = "news Type") +
    scale_alpha(guide = "none") +
    xlab("log[Pr(pop)]") +
    ylab("log[Pr(notpop)]") +
    theme_bw() +
    theme(axis.text.x = element_blank(), axis.text.y = element_blank())
ggsave(plot = class.plot,
       filename = file.path("./", "newPopGraph.pdf"),
       height = 10,
       width = 10)
get.results <- function(bool.vector)
{
         results <- c(length(bool.vector[which(bool.vector == FALSE)]) / length(bool.vector),
              length(bool.vector[which(bool.vector == TRUE)]) / length(bool.vector))
 return(results)
}
notpop.False<-subset(class.df, Type=="notpop" & Class=="FALSE")
notpop.FalseCount<-nrow(notpop.False)
notpop.True<-subset(class.df, Type=="notpop" & Class=="TRUE")
notpop.TrueCount<-nrow(notpop.True)
pop.False<-subset(class.df, Type=="pop" & Class=="FALSE")
pop.FalseCount<-nrow(pop.False)
pop.True<-subset(class.df, Type=="pop" & Class=="TRUE")
pop.TrueCount<-nrow(pop.True)
notpop.row <- c(notpop.FalseCount, notpop.TrueCount)
pop.row<-c(pop.FalseCount, pop.TrueCount)
allarticle<-rbind(notpop.row, pop.row)
colnames(allarticle) = c("False", "True")
allariticle
allarticle
quit
q
q()
